@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@using Syncfusion.Blazor.SplitButtons
@using TutorPins_Client.Authentication;
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<div class="page">
    
    <main>
       @* <div class="top-row px-4">
            <a href="/" target="_blank">Login</a>
        </div>*@
        <div class="top-row px-4">
            
            <a href="/public/studentregister"><i class="fa fa-fw fa-user"></i> Request a Tutor</a>
            <a href="/public/tutorregister"><i class="fa fa-fw fa-user"></i> Register as a Tutor</a>
            <AuthorizeView>
                <Authorized>
                    <a @onclick="Logout" href="javascript:void(0)"></a>
                </Authorized>
                <NotAuthorized>
                    <a href="/Login"><i class="e-icons e-people"></i> Login</a>
                </NotAuthorized>
            </AuthorizeView>
            &nbsp;&nbsp;
            @* <a href="#"><i class="fa fa-fw fa-envelope"></i> Contact</a> *@
            @* <a href="/admin"><i class="fa fa-fw fa-user"></i>Admin Login</a> *@
            @* <SfDropDownButton Content="Login" IconCss="e-icons e-people">
                        <DropDownMenuItems>
                            <DropDownMenuItem Text="Tutor" IconCss=@DASHBOARD></DropDownMenuItem>
                            <DropDownMenuItem Text="Student" IconCss=@NOTIFICATION></DropDownMenuItem> *@
                    @* <DropDownMenuItem Text="Administrator" Url="/admindashboard" IconCss=@SETTINGS></DropDownMenuItem> *@
                    @* <DropDownMenuItem Text="Administrator" Url="/login" IconCss=@SETTINGS></DropDownMenuItem> *@
                @* </DropDownMenuItems> *@
                    @* </SfDropDownButton> *@
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>   
</div>
<style>

    .e-dropdown-btn, .e-btn {

        /* background-color: rgb(240,240,240) !important; */
        background-color: #f7f7f7 !important;
        border: none !important;
        color: #0071c1 !important;
    }

 

        .e-dropdown-btn:focus, .e-dropdown-btn:active, .e-dropdown-btn:hover,

        .e-btn:focus, .e-btn:active, .e-btn:hover {

            background-color: #f7f7f7 !important;
            color: #0071c1 !important;
            box-shadow: none !important;

        }

</style>
@code {
    const string DASHBOARD = "e-icons e-user";
    const string NOTIFICATION = "e-icons e-user";
    const string SETTINGS = "e-icons e-settings";
    const string LOGOUT = "e-icons e-logout";
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
}