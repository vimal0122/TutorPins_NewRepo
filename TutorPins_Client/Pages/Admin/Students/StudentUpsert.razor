@page "/students/create"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject IStudentService studentService
@inject IGenericService genericSerice
@inject ICourseSubjectService courseSubjectService


<div class="row mt-2 mb-1">
    <h3 class="card-title text-info mb-2 ml-3">Student Registration</h3></div>

<div class="col-lg-12 control-section">
    
    <div class="content-wrapper">
        <div class="row">
                <div class="form-group mt-1">
                    <SfTextBox Placeholder="Full Name" @bind-Value="@StudentModel.StudentName" CssClass="e-corner e-input-group form-control" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                </div>
                </div>
        <div class="row">
                <div class="form-group mt-1 col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    <SfTextBox Placeholder="Email" @bind-Value="@StudentModel.StudentEmail" CssClass="e-corner e-input-group form-control" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>                    
                </div>
                
                <div class="form-group mt-1 col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    <SfTextBox Placeholder="Contact No" CssClass="e-corner e-input-group" @bind-Value="@StudentModel.StudentPhoneNo" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>                    
                </div>
                </div>
        <div class="row">
                <div class="form-group mt-2">
                    <SfTextBox Placeholder="Parent/Guardian Full Name" @bind-Value="@StudentModel.ParentName" CssClass="e-corner e-input-group form-control" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>                    
                </div>
        </div>
        <div class="row">
            <div class="form-group mt-1 col-xs-10 col-sm-10 col-lg-10 col-md-10 mt-3 ms-2">
                <span class="mt-1 mb-1" style="color:#212529; font-size:14px; font-family:' Helvetica Neue','Helvetica','Arial','sans-serif','-apple-system','BlinkMacSystemFont'">Requesting Person is &nbsp;&nbsp;</span>
                <SfRadioButton Label="Parent" Name="RequestFrom" Value="parent" @bind-Checked="@StudentModel.RequestFrom"></SfRadioButton>
                <SfRadioButton Label="Guardian" Name="RequestFrom" Value="guardian" @bind-Checked="@StudentModel.RequestFrom"></SfRadioButton>
                <SfRadioButton Label="Student" Name="RequestFrom" Value="student" @bind-Checked="@StudentModel.RequestFrom"></SfRadioButton>
            @* </div>
            
                <div class="form-group mt-1 col-xs-6 col-sm-6 col-lg-6 col-md-6"> *@
                @if (StudentModel.RequestFrom == "parent")
                {
                    <div style="float:right">
                    <span class="mt-1 mb-1" style="color:#212529; font-size:14px; font-family:' Helvetica Neue','Helvetica','Arial','sans-serif','-apple-system','BlinkMacSystemFont'"> Relationship </span>
                        <SfRadioButton Label="Daughter" Name="Relationship" Value="daughter" @bind-Checked="@StudentModel.ParentRelation"></SfRadioButton>
                        <SfRadioButton Label="Son" Name="Relationship" Value="son" @bind-Checked="@StudentModel.ParentRelation"></SfRadioButton>
                </div>
                 }
            </div>
            
        </div>
        <div class="row">
            <div class="form-group mt-1 col-xs-6 col-sm-6 col-lg-6 col-md-6">
                <SfTextBox Placeholder="Parent/Guardian Email" @bind-Value="@StudentModel.ParentEmail" CssClass="e-corner e-input-group form-control" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
            </div>

            <div class="form-group mt-1 col-xs-6 col-sm-6 col-lg-6 col-md-6">
                <SfTextBox Placeholder="Parent/Guardian Contact No" CssClass="e-corner e-input-group" @bind-Value="@StudentModel.ParentPhoneNo" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
            </div>
        </div>
        <div class="row mt-1">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                <SfMultiSelect TValue="string[]" EnableSelectionOrder="false" TItem="CourseSubjectDto" Mode="VisualMode.CheckBox" FilterBarPlaceholder="Search Subjects" Placeholder="Subjects to be tutored" AllowFiltering="true" @bind-Value="@SelectedSubjects" DataSource="@courseSubjectList" FloatLabelType="FloatLabelType.Auto" EnableGroupCheckBox="true">
                    <MultiSelectEvents TItem="CourseSubjectDto" TValue="string[]" ValueChange="@SubjectChangeHandler"></MultiSelectEvents>
                    <MultiSelectFieldSettings GroupBy="LevelName" Text="SubjectFullName" Value="Id"></MultiSelectFieldSettings>
                </SfMultiSelect>
                <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6 mt-2" style="display:@ModalDisplay">
                    <table class="table table-sm table-hover table-bordered">
                        <thead class="thead-light">
                            <tr>
                                <th style="width: 10%; font-size: 14px;color:#212529; font-family:' Helvetica Neue','Helvetica','Arial','sans-serif','-apple-system','BlinkMacSystemFont'">Subject Name</th>
                                <th style="width: 10%; font-size: 14px"> Frequency</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (StoreSubjectDetails.Any())
                            {
                                foreach (var c in StoreSubjectDetails)
                                {
                                    <tr>
                                        <td>
                                            @c.SubjectName
                                        </td>
                                        <td>
                                            <SfTextBox @bind-Value="@c.DurationPerWeek" Placeholder="e.g 2 hours per week"></SfTextBox>
                                        </td>

                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>



            </div>
        </div>
        <div class="row mt-1">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                <SfDropDownList TValue="string" TItem="GeneralText" Placeholder="Select Category" @bind-Value="@StudentModel.PreferedTutorCategory" DataSource="@Category" FloatLabelType="FloatLabelType.Auto">
                    <DropDownListFieldSettings Text="Name" Value="Id"></DropDownListFieldSettings>
                </SfDropDownList>

            </div>
        </div>
        
        <div class="row mt-1">

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                <SfDatePicker TValue="DateTime?" @bind-Value="@DOSValue" Placeholder="Earliest start Date" Min="@MinDate" FloatLabelType="@FloatLabelType.Auto">
                </SfDatePicker>
            </div>
            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                <SfTextBox Placeholder="Prefered Time slots (e.g. Mon-Fri 2PM-4PM  Sat-Sun after 10AM" @bind-Value="@StudentModel.PreferedTimeSlots" CssClass="e-corner" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>

            </div>
        </div>
        <div class="row mt-1">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                <SfNumericTextBox Placeholder="Approximate budget ($)" TValue="int?" Min=10 @bind-Value="@StudentModel.ApproxBudget" FloatLabelType="@FloatLabelType.Auto"></SfNumericTextBox>
            </div>
        </div>
        <div class="row mt-1">

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                <SfDropDownList TValue="string" TItem="GeneralText" Placeholder="Prefered Gender" @bind-Value="@StudentModel.PreferedTutorGender" DataSource="@Genders" FloatLabelType="@FloatLabelType.Auto">
                    <DropDownListFieldSettings Text="Name" Value="Id"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                <SfDropDownList TValue="string" TItem="GeneralText" Placeholder="Prefered Race" @bind-Value="@StudentModel.PreferedTutorRace" DataSource="@Race" FloatLabelType="@FloatLabelType.Auto">
                    <DropDownListFieldSettings Text="Name" Value="Id"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
        <div class="row mt-1">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                <SfTextBox style="height: 100px" Multiline=true Placeholder="Additional details (if any) " @bind-Value="@StudentModel.AdditionalDetails" CssClass="e-corner" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
            </div>
                </div>
        
        <div class="row mt-2 mb-2 text-end float-end">
                <div class="form-group mt-2">
                    <input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />
                    <input type="button" class="btn btn-primary" @onclick="@Back" value="Back" />
                </div>
            </div>
        </div>
</div>

@code {
    private string Title { get; set; } = "Create";
    private StudentDto StudentModel { get; set; } = new StudentDto();
    public string[] SelectedSubjects { get; set; } = new string[] { };
    public string ModalDisplay = "none;";
    public DateTime? DOSValue { get; set; } = null;
    //public int ApproxBudget { get; set; } = 10;

    public List<StudentSubjectDto> StoreSubjectDetails = new List<StudentSubjectDto>();
    List<CourseSubjectDto> courseSubjectList = new List<CourseSubjectDto>();
    List<GeneralText> Genders = new List<GeneralText>();
    List<GeneralText> Race = new List<GeneralText>();
    List<GeneralText> Category = new List<GeneralText>();

    public DateTime MinDate { get; set; } = DateTime.Now.AddDays(1);
    

    protected override async Task OnInitializedAsync()
    {
        IEnumerable<CourseSubjectDto> courseSubjects = await courseSubjectService.GetCourseSubjects();
        courseSubjectList = courseSubjects.ToList();

        Genders = genericSerice.GetGenders();
        Race = genericSerice.GetRaces();
        Category = genericSerice.GetCategories();
    }
    protected async Task Save()
    {
        StudentModel.StudentSubjects = StoreSubjectDetails;        
        StudentModel.EarliestStartDate = DOSValue;
        var response = await studentService.CreateStudent(StudentModel);
        if (response)
        {
            NavigationManager.NavigateTo("students");
        }
    }
    void Back()
    {
        NavigationManager.NavigateTo("students");
    }
    private void SubjectChangeHandler(MultiSelectChangeEventArgs<string[]> args)
    {
        StoreSubjectDetails.Clear();
        SaveSubjectData();
    }
    public void SaveSubjectData()
    {
        try
        {
            
            ModalDisplay = "none;";
            StudentSubjectDto studentSubject = new StudentSubjectDto();
            //tutorSubject.Id = ++i;
            //string[] subjects = SubjectId.Split(',', StringSplitOptions.RemoveEmptyEntries);

            foreach (string s in SelectedSubjects)
            {
                studentSubject = new StudentSubjectDto();

                var t = courseSubjectList.Where(t => t.Id == Convert.ToInt32(s)).FirstOrDefault();
                studentSubject.CategoryName = t.Course.CourseCategory.CategoryName;
                studentSubject.CourseName = t.Course.CourseName;
                studentSubject.SubjectName = t.SubjectFullName;
                studentSubject.SubjectId = Convert.ToInt32(t.Id);
                //studentSubject.DurationPerWeek = HourlyRate;

                StoreSubjectDetails.Add(studentSubject);
                ModalDisplay = "block;";
            }
        }
        catch (Exception ex)
        {

        }

        
    }
}
